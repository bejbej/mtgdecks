var app;!function(t){angular.module("templates",[]),angular.module("app",["templates","ngRoute"])}(app||(app={})),function(){angular.module("app").constant("config",appConfig)}();var app;!function(t){var e=function(){function t(t){t.when("/decks/:id",{templateUrl:"deck/deck.html"}).when("/decks",{templateUrl:"decks/decks.html"}).otherwise({templateUrl:"404/404.html"})}return t.$inject=["$routeProvider"],t}();angular.module("app").config(e)}(app||(app={}));var app;!function(t){var e=function(){function t(t){var e=this;this.config=t,this.imageUrl=function(){return e.config.imagesUrl+e.multiverseId+".jpg"},this.storeUrl=function(){return e.config.storeUrl+e.name.replace(/ /g,"+")}}return t}();t.Card=e}(app||(app={}));var app;!function(t){var e=function(){function e(e){var r=this;this.CardService=e,this.setCards=function(t){r.cards=t,r.parseCards()},this.getCards=function(){return r.cards},this.getCardsByPrimaryType=function(t){return r.cardList.filter(function(e){return e.primaryType===t})},this.count=function(){return r.cardList.reduce(function(t,e){return t+Number(e.quantity)},0)},this.countByPrimaryType=function(t){return r.getCardsByPrimaryType(t).reduce(function(t,e){return t+Number(e.quantity)},0)},this.combineDuplicateNames=function(t){t=t.sort(function(t,e){return t.name>e.name?1:-1});for(var e=[],r=0;r<t.length;++r){for(var a=t[r];void 0!==t[r+1]&&a.name.toLowerCase()===t[r+1].name.toLowerCase();)a.quantity+=t[r+1].quantity,delete t[r+1],++r;e.push(a)}return e},this.parseCards=function(){r.failedCardNames=[];var e=r.cards.split("\n").map(function(e){var r=/^([\d]*)[Xx ]*(.*)$/.exec(e.trim()),a=new t.NameQuantityPair;return a.name=r[2],a.quantity=""===r[1]?1:Number(r[1]),a});e=r.combineDuplicateNames(e);var a=e.map(function(t){return t.name.trim()}).filter(function(t){return t&&t.length>2});return 0===a.length?void(r.cardList=[]):void r.CardService.getCards(a).then(function(t){var a=[];e.forEach(function(e){var n=t.filter(function(t){return t.name.toLowerCase()===e.name.toLowerCase()})[0];return void 0===n?void r.failedCardNames.push(e.name):(n.quantity=e.quantity,void a.push(n))}),r.cardList=a.sort(function(t,e){return t.name>e.name?1:-1})})},this.name=name,this.cardList=[],this.cards=""}return e}();t.CardGroup=e}(app||(app={}));var app;!function(t){var e=function(){function t(t){var e=this;this.DeckService=t,this.save=function(){return e.id?e.DeckService.updateDeck(e):e.DeckService.createDeck(e)}}return t}();t.Deck=e}(app||(app={}));var app;!function(t){var e=function(){function t(t){var e=this;this.CardFactory=t,this.key="cards",this.get=function(t){var r=JSON.parse(localStorage.getItem(e.key));r||(r={},localStorage.setItem(e.key,JSON.stringify(r)));var a=r[t.toLowerCase()];if(void 0!==a)return angular.merge(e.CardFactory.createCard(),a)},this.add=function(t){var r=JSON.parse(localStorage.getItem(e.key));t.forEach(function(t){r[t.name.toLowerCase()]=t}),localStorage.setItem(e.key,JSON.stringify(r)),console.log("cache contains "+Object.keys(r).length+" cards")}}return t.$inject=["CardFactory"],t}();t.CardCacheService=e,angular.module("app").service("CardCacheService",e)}(app||(app={}));var app;!function(t){var e=function(){function e(t){this.$injector=t}return e.$inject=["$injector"],e.prototype.createCard=function(){return new t.Card(this.$injector.get("config"))},e}();t.CardFactory=e,angular.module("app").service("CardFactory",e)}(app||(app={}));var app;!function(t){var e=function(){function e(t){this.$injector=t}return e.$inject=["$injector"],e.prototype.createCardGroup=function(){return new t.CardGroup(this.$injector.get("CardService"))},e}();t.CardGroupFactory=e,angular.module("app").service("CardGroupFactory",e)}(app||(app={}));var app;!function(t){var e=function(){function t(t,e,r,a,n){var i=this;this.config=t,this.$http=e,this.$q=r,this.CardCacheService=a,this.CardFactory=n,this.getCards=function(t){var e=[],r=t.filter(function(t){var r=i.CardCacheService.get(t);return void 0===r||(e.push(r),!1)});if(0===r.length)return i.$q.when(e);var a=i.$q.defer(),n=i.config.cardsUrl+"?"+r.map(function(t){return"name="+t.replace(/ /g,"+")}).join("&");return i.getCardsRecursively(n,t,e,0,a),a.promise},this.getCardsRecursively=function(t,e,r,a,n){if(a>1)throw"page is too damn high";var c=t+"&page="+a;i.$http.get(c).then(function(c){if(r=r.concat(c.data.map(i.mapApiCard)),c.data.length>=100)i.getCardsRecursively(t,e,r,a+1,n);else{e=e.map(function(t){return t.toLowerCase()});var o=[];r.forEach(function(t){e.indexOf(t.name.toLowerCase())>=0&&o.push(t)}),i.CardCacheService.add(o),n.resolve(o)}})},this.mapApiCard=function(t){var e=i.CardFactory.createCard();return e.name=t.name,e.cmc=t.cmc,e.primaryType=i.config.types.filter(function(e){return t.types.indexOf(e)>=0})[0],e.multiverseId=t.editions.map(function(t){return t.multiverse_id}).sort(function(t,e){return t-e}).pop(),e},this.cache={}}return t.$inject=["config","$http","$q","CardCacheService","CardFactory"],t}();t.CardService=e,angular.module("app").service("CardService",e)}(app||(app={}));var app;!function(t){var e=function(){function e(t){this.$injector=t}return e.$inject=["$injector"],e.prototype.createDeck=function(){return new t.Deck(this.$injector.get("DeckService"))},e}();t.DeckFactory=e,angular.module("app").service("DeckFactory",e)}(app||(app={}));var app;!function(t){var e=function(){function t(t,e,r,a,n){var i=this;this.$http=e,this.$q=r,this.DeckFactory=a,this.CardGroupFactory=n,this.getDeck=function(t){var e=i.$q.defer();return i.$http.get(i.url+"/"+t).then(function(t){e.resolve(i.mapApiDeck(t.data))}),e.promise},this.getDecksByQuery=function(t){var e=i.$q.defer();return i.$http.get(i.url).then(function(t){e.resolve(t.data.results)}),e.promise},this.createDeck=function(t){var e=i.$q.defer(),r={name:t.name,cardGroups:t.cardGroups.map(function(t){return{name:t.name,cards:t.getCards()}})};return i.$http.post(i.url,r).then(function(){e.resolve()}),e.promise},this.updateDeck=function(t){var e=i.$q.defer(),r={name:t.name,data:{cardGroups:t.cardGroups.map(function(t){return{name:t.name,cards:t.getCards()}})}};return i.$http.post(i.url+"/"+t.id,r).then(function(){e.resolve()}),e.promise},this.mapApiDeck=function(t){var e=i.DeckFactory.createDeck();return e.id=t.id,e.name=t.name,e.cardGroups=t.data.cardGroups.map(function(t){var e=i.CardGroupFactory.createCardGroup();return e.name=t.name,e.setCards(t.cards),e}),e},this.url=t.decksUrl}return t.$inject=["config","$http","$q","DeckFactory","CardGroupFactory"],t}();t.DeckService=e,angular.module("app").service("DeckService",e)}(app||(app={}));var app;!function(t){var e=function(){function t(){}return t}();t.NameQuantityPair=e}(app||(app={}));var app;!function(t){var e=function(){function t(){}return t}();t.Stat=e}(app||(app={}));var app;!function(t){var e=function(){function t(){}return t}();t.StatGroup=e}(app||(app={}));var app;!function(t){var e=function(){function t(){var t=this;this.getOffset=function(t){var e=t.getBoundingClientRect(),r=window.pageXOffset||document.documentElement.scrollLeft,a=window.pageYOffset||document.documentElement.scrollTop;return{top:e.top+a,left:e.left+r}},this.showCardPreview=function(e,r){var a=document.getElementById("card-preview");a||(a=document.createElement("img"),a.id="card-preview",document.body.appendChild(a));var n=t.getOffset(e.currentTarget);a.style.top=n.top-100+"px",a.style.left=n.left+e.currentTarget.offsetWidth+20+"px",a.src=r},this.hideCardPreview=function(t){var e=document.getElementById("card-preview");e.src="",e.style.top="-300px",e.style.left="-200px"},this.restrict="A",this.scope={cardPreview:"="},this.link=function(e,r,a){r[0].addEventListener("mouseover",function(r){t.showCardPreview(r,e.cardPreview)}),r[0].addEventListener("mouseleave",t.hideCardPreview)}}return t}();angular.module("app").directive("cardPreview",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function t(){this.restrict="E",this.scope={group:"="},this.templateUrl="cardGroup/cardGroup.html"}return t}();angular.module("app").directive("cardGroup",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function t(t,e){var r=this;this.startEditing=function(){r.cardsBlob=r.cardGroup.getCards(),r.isEditing=!0},this.applyChanges=function(){r.cardGroup.setCards(r.cardsBlob),r.isEditing=!1},this.discardChanges=function(){r.isEditing=!1},this.cardGroup=t.group,this.isEditing=!1,this.categories=e.categories}return t.$inject=["$scope","config"],t}();angular.module("app").controller("CardGroupController",e)}(app||(app={}));var app;!function(t){var e=function(){function t(){this.restrict="E",this.scope={id:"="},this.templateUrl="deck/deck.html"}return t}();angular.module("app").directive("deck",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function t(t,e,r,a){var n=this;this.DeckService=e,this.DeckFactory=r,this.CardGroupFactory=a,this.createNewDeck=function(){var t=n.DeckFactory.createDeck();t.name="New Deck";var e=n.CardGroupFactory.createCardGroup(),r=n.CardGroupFactory.createCardGroup(),a=n.CardGroupFactory.createCardGroup();return e.name="Mainboard",r.name="Sideboard",a.name="Maybeboard",t.cardGroups=[e,r,a],t},"new"===t.id?this.deck=this.createNewDeck():this.DeckService.getDeck(t.id).then(function(t){n.deck=t})}return t.$inject=["$routeParams","DeckService","DeckFactory","CardGroupFactory"],t}();angular.module("app").controller("DeckController",e)}(app||(app={}));var app;!function(t){var e=function(){function t(){this.restrict="E",this.templateUrl="decks/decks.html"}return t}();angular.module("app").directive("decks",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function t(t){var e=this;t.getDecksByQuery(null).then(function(t){e.decks=t.sort(function(t,e){return t.name>e.name?1:-1})})}return t.$inject=["DeckService"],t}();angular.module("app").controller("DecksController",e)}(app||(app={}));var app;!function(t){var e=function(){function t(){this.restrict="E",this.scope={group:"="},this.templateUrl="statGroup/statGroup.html"}return t}();angular.module("app").directive("statGroup",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function t(){this.restrict="E",this.scope={cards:"="},this.templateUrl="stats/statsView.html"}return t}();angular.module("app").directive("stats",function(){return new e})}(app||(app={}));var app;!function(t){var e=function(){function e(e,r){var a=this;this.unique=function(t,e,r){return r.indexOf(t)===e},this.createStatGroup=function(e,r){var n=new t.StatGroup;n.name=r.name;var i=e.filter(function(t){return r.types.indexOf(t.primaryType)>=0}),c=i.map(function(t){return t.cmc}).filter(a.unique).sort();n.stats=[];for(var o=0;o<=c[c.length-1];++o){var s=new t.Stat;s.name=o.toString(),s.value=i.filter(function(t){return t.cmc===o}).reduce(function(t,e){return t+Number(e.quantity)},0),n.stats.push(s)}return n},this.createStatGroups=function(t,e){return e.map(function(e){return a.createStatGroup(t,e)})},this.updateStats=function(t,e,r){t?a.statGroups=a.createStatGroups(t,a.categories):a.statGroups=[]},this.categories=r.statCategories,e.$watchCollection("cards",this.updateStats)}return e.$inject=["$scope","config"],e}();angular.module("app").controller("StatsController",e)}(app||(app={})),angular.module("templates").run(["$templateCache",function(t){t.put("404/404.html","<div style=color:white;><h1>404</h1><p>Two roads diverged in a yellow wood,<br>And sorry I could not travel both<br>And be one traveler, long I stood<br>And looked down one as far as I could<br>To where it bent in the undergrowth;</p><p>Then took the other, as just as fair,<br>And having perhaps the better claim,<br>Because it was grassy and wanted wear;<br>Though as for that the passing there<br>Had worn them really about the same,</p><p>And both that morning equally lay<br>In leaves no step had trodden black.<br>Oh, I kept the first for another day!<br>Yet knowing how way leads on to way,<br>I doubted if I should ever come back.</p><p>I shall be telling this with a sigh<br>Somewhere ages and ages hence:<br>Two roads diverged in a wood, and I—<br>I took the one less traveled by,<br>And that has made all the difference.</p></div>"),t.put("cardGroup/cardGroup.html",'<div class="panel panel-default" ng-controller="CardGroupController as vm"><div class=panel-heading><span>{{vm.cardGroup.name}}</span> <span class=badge>{{vm.cardGroup.count()}}</span> <button class="btn btn-default btn-xs" ng-if=!vm.isEditing ng-click=vm.startEditing()>Edit</button> <button class="btn btn-default btn-xs" ng-if=vm.isEditing ng-click=vm.applyChanges()>Apply Changes</button> <button class="btn btn-default btn-xs" ng-if=vm.isEditing ng-click=vm.discardChanges()>Discard Changes</button></div><div class="alert alert-danger margin" ng-if="vm.cardGroup.failedCardNames.length > 0">Couldn\'t identify the following card names:<ul><li ng-repeat="name in vm.cardGroup.failedCardNames">{{name}}</li></ul></div><div class=margin ng-if="!vm.isEditing && vm.cardGroup.count() > 0"><div class=row><div class=col-sm-4 ng-repeat="category in vm.categories"><div class=card-group ng-repeat="type in category.types" ng-if="vm.cardGroup.countByPrimaryType(type) > 0"><h3>{{type}} <span class=badge>{{vm.cardGroup.countByPrimaryType(type)}}</span></h3><div ng-repeat="card in vm.cardGroup.getCardsByPrimaryType(type)"><span class=quantity>{{card.quantity}}</span> <a class=name href={{card.storeUrl()}} target=_blank card-preview=card.imageUrl()>{{card.name}}</a> <span class=price></span></div></div></div></div></div><form class=margin ng-if=vm.isEditing><div class=form-group><textarea class=form-control ng-model=vm.cardsBlob></textarea></div><button class="btn btn-default" type=button ng-click=vm.applyChanges()>Apply Changes</button> <button class="btn btn-default" type=button ng-click=vm.discardChanges()>Discard Changes</button></form></div>'),t.put("deck/deck.html",'<div ng-controller="DeckController as vm"><div class="navbar navbar-default"><div class=navbar-brand>{{vm.deck.name}}</div><div class=navbar-form style=display:none;><button class="btn btn-default" ng-click=vm.deck.save()>Save Deck</button></div></div><div class="panel panel-default" ng-if="vm.deck.cardGroups[0].cards.length > 0"><div class=panel-heading>Stats</div><div class=panel-body><stats cards=vm.deck.cardGroups[0].cardList></stats></div></div><div ng-repeat="cardGroup in vm.deck.cardGroups"><card-group group=cardGroup></card-group></div></div>'),t.put("decks/decks.html",'<div ng-controller="DecksController as vm"><div class=list-group><a class=list-group-item href=#/decks/{{deck.id}} ng-repeat="deck in vm.decks">{{deck.name}}</a></div></div>'),t.put("statGroup/statGroup.html",'<div class=stat-group><h3>{{group.name}}</h3><div ng-repeat="stat in group.stats"><span class=name>{{stat.name}}</span> <span class=bar>{{"X".repeat(stat.value)}}</span> <span class=value ng-if="stat.value > 0">{{stat.value}}</span></div></div>'),t.put("stats/statsView.html",'<div ng-controller="StatsController as vm"><div class=row><div class=col-xs-12><stat-group group=vm.statGroups[0]></stat-group></div></div></div>')}]);